{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "VDD Agent Configuration Schema",
  "description": "Validation schema for VDD framework dynamic agent configuration",
  "type": "object",
  
  "required": ["vdd_config_version", "agent_profiles", "coordination_rules"],
  
  "properties": {
    "vdd_config_version": {
      "type": "string",
      "pattern": "^[0-9]+\\.[0-9]+$",
      "description": "Configuration version in major.minor format"
    },
    
    "agent_profiles": {
      "type": "object",
      "required": ["discovery_agent", "planning_agent", "execution_agent", "validation_agent"],
      "properties": {
        "discovery_agent": { "$ref": "#/definitions/agent_profile" },
        "planning_agent": { "$ref": "#/definitions/agent_profile" },
        "execution_agent": { "$ref": "#/definitions/agent_profile" },
        "validation_agent": { "$ref": "#/definitions/agent_profile" }
      },
      "additionalProperties": { "$ref": "#/definitions/agent_profile" }
    },
    
    "coordination_rules": {
      "type": "object",
      "required": ["max_concurrent_agents", "agent_communication", "conflict_resolution"],
      "properties": {
        "max_concurrent_agents": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "description": "Maximum number of concurrent agents"
        },
        "agent_communication": {
          "type": "string",
          "enum": ["none", "result_sharing", "full_coordination", "hierarchical"],
          "description": "Agent communication protocol"
        },
        "conflict_resolution": {
          "type": "string",
          "enum": ["priority_based", "consensus", "hierarchical", "first_come"],
          "description": "Conflict resolution strategy"
        },
        "load_balancing": {
          "type": "string",
          "enum": ["static", "dynamic", "adaptive", "predictive"],
          "description": "Load balancing algorithm"
        },
        "failure_handling": {
          "type": "string",
          "enum": ["fail_fast", "graceful_degradation", "retry_cascade", "circuit_breaker"],
          "description": "Failure handling strategy"
        }
      }
    },
    
    "resource_constraints": {
      "type": "object",
      "properties": {
        "global_token_limit": {
          "type": "integer",
          "minimum": 1000,
          "maximum": 100000,
          "description": "Global token limit for all agents"
        },
        "memory_limit_mb": {
          "type": "integer",
          "minimum": 256,
          "maximum": 8192,
          "description": "Memory limit in megabytes"
        },
        "max_file_operations_per_minute": {
          "type": "integer",
          "minimum": 10,
          "maximum": 1000,
          "description": "Maximum file operations per minute"
        }
      }
    }
  },
  
  "definitions": {
    "agent_profile": {
      "type": "object",
      "required": ["max_parallel_tasks", "token_limit", "specialization", "coordination_level"],
      "properties": {
        "max_parallel_tasks": {
          "type": "integer",
          "minimum": 1,
          "maximum": 20,
          "description": "Maximum parallel tasks for this agent type"
        },
        "token_limit": {
          "type": "integer",
          "minimum": 1000,
          "maximum": 10000,
          "description": "Token limit per agent instance"
        },
        "specialization": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50
          },
          "minItems": 1,
          "maxItems": 10,
          "description": "Agent specialization areas"
        },
        "coordination_level": {
          "type": "string",
          "enum": ["autonomous", "collaborative", "coordinated", "independent"],
          "description": "Level of coordination with other agents"
        },
        "error_tolerance": {
          "type": "string",
          "enum": ["none", "low", "medium", "high"],
          "description": "Error tolerance level"
        },
        "timeout_seconds": {
          "type": "integer",
          "minimum": 30,
          "maximum": 600,
          "description": "Timeout in seconds"
        },
        "retry_attempts": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "description": "Number of retry attempts"
        },
        "tools_priority": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["Read", "Write", "Edit", "MultiEdit", "Bash", "Grep", "Glob", "LS", "Task", "TodoWrite"]
          },
          "description": "Tool usage priority order"
        }
      }
    }
  }
}