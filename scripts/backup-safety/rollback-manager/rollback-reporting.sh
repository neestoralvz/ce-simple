#!/bin/bash
# rollback-reporting.sh - Rollback reporting and usage information
# Part of rollback-manager.sh L2-MODULAR extraction
# Authority: @context/architecture/patterns/l2-modular-extraction-patterns.md

set -euo pipefail

# Generate rollback report
generate_rollback_report() {
    local report_file="$OUTPUT_DIR/ROLLBACK_MANAGEMENT_REPORT.md"
    
    cat > "$report_file" << EOF
# Rollback Management Report

**Generated**: $(date)
**Script**: rollback-manager.sh
**Purpose**: Comprehensive rollback capabilities and recovery system management

## Rollback System Overview

### Rollback Capabilities
- **Single File Rollback**: Individual file restoration from backup with integrity verification
- **Batch Operation Rollback**: Multiple file restoration with pattern matching and selective rollback
- **Session Rollback**: Complete operation session restoration to initial state
- **Git-Based Rollback**: Repository-level rollback to specific commits, branches, or stashes
- **Selective Rollback**: Targeted rollback of specific changes with user control

### Safety Features
- **Recovery Backups**: Current state backup before rollback execution
- **Integrity Validation**: File integrity verification before and after rollback
- **Authority Preservation**: Authority chain integrity monitoring during rollback
- **Multi-Level Protection**: File â†’ Session â†’ Git â†’ Emergency rollback hierarchy

### Rollback Types Supported
1. **File Rollback**: Restore individual files from .backup versions
2. **Batch Rollback**: Restore multiple files from batch operation backups
3. **Git Commit Rollback**: Repository reset to specific commit hash
4. **Git Branch Rollback**: Switch to previous branch state
5. **Git Stash Rollback**: Apply previously stashed changes

### Integration with H6D Scripts
- **Domain Classifier**: Rollback classification changes and restore original categorization
- **Batch L2-MODULAR**: Restore hub-module extractions to original monolithic files
- **Authority Validator**: Rollback authority modifications and restore user voice fidelity
- **Cross-Reference Updater**: Restore reference integrity and undo reference updates
- **Progress Tracker**: Reset progress metrics and restore baseline measurements

## Quality Assurance

### Rollback Validation
- **Pre-Rollback**: Backup availability and integrity verification
- **During Rollback**: Operation success monitoring and error detection
- **Post-Rollback**: Integrity validation and authority preservation verification
- **Recovery Protection**: Current state backup before any rollback operation

### Emergency Recovery
- **Multi-Level Recovery**: File â†’ Batch â†’ Session â†’ Git rollback hierarchy
- **Integrity Monitoring**: Continuous integrity checking during rollback operations
- **Authority Preservation**: User authority supremacy maintained through all rollback operations
- **System Health**: Complete system health validation after rollback completion

### Usage Recommendations
- Always verify backup integrity before rollback execution
- Use selective rollback for targeted restoration of specific changes
- Implement regular backup indexing for efficient rollback management
- Monitor authority preservation during and after rollback operations

---
**Generated by**: rollback-manager.sh - H6D-SCRIPTS automation framework
EOF

    echo -e "${GREEN}ðŸ“„ Rollback report: ROLLBACK_MANAGEMENT_REPORT.md${NC}"
}

# Show usage information
show_usage() {
    cat << EOF
Rollback Manager - H6D-SCRIPTS Automation Framework

USAGE:
    $0 --index backup_dir [operation] [description]     # Create backup index
    $0 --file original backup [verify_hash]            # Rollback single file
    $0 --batch index_file [mode] [pattern]             # Rollback batch operation
    $0 --git type target [scope]                       # Git-based rollback
    $0 --validate [type] [files]                       # Validate rollback integrity
    $0 --help                                           # Show this help

COMMANDS:
    --index        Create comprehensive backup index for rollback operations
    --file         Rollback single file from backup with integrity verification
    --batch        Rollback multiple files from batch operation backup
    --git          Git-based rollback operations (commit, branch, stash)
    --validate     Validate rollback integrity and system health

INDEX EXAMPLES:
    $0 --index /path/to/backups h6a "H6A quick wins backup"
    $0 --index backup_dir l2_modular "L2-MODULAR extraction backup"

FILE ROLLBACK EXAMPLES:
    $0 --file context/file.md backup/file.md.backup true
    $0 --file path/to/file.md backup_dir/file.backup false

BATCH ROLLBACK EXAMPLES:
    $0 --batch backup_index.json interactive "context/.*"
    $0 --batch index.json auto ".*authority.*"
    $0 --batch index.json selective

BATCH MODES:
    interactive    Prompt for each file rollback decision
    auto           Automatic rollback for all matching files
    selective      Rollback only files modified after backup

GIT ROLLBACK EXAMPLES:
    $0 --git commit abc1234 context                    # Rollback context/ to commit
    $0 --git commit HEAD~3 all                         # Rollback repo 3 commits
    $0 --git branch feature-branch                     # Switch to branch
    $0 --git stash stash@{0}                          # Apply stash

GIT SCOPES:
    all            Full repository rollback
    context        Context directory only rollback
    specific       Specific files rollback (not implemented)

VALIDATION EXAMPLES:
    $0 --validate basic                                # Basic file integrity check
    $0 --validate comprehensive                        # Full system validation
    $0 --validate authority "context/authority.md"     # Authority integrity check

VALIDATION TYPES:
    basic          File existence and basic integrity
    comprehensive  Full integrity including authority markers
    authority      Authority preservation and chain integrity

SAFETY FEATURES:
    - Recovery backups created before all rollback operations
    - Backup integrity verification with SHA-256 hashing
    - Multi-level rollback hierarchy (file â†’ batch â†’ session â†’ git)
    - Authority preservation monitoring during rollback operations
    - Complete operation logging for audit and troubleshooting

OUTPUT:
    - Comprehensive rollback operation logging
    - Integrity validation reports and system health assessment
    - Detailed rollback results with success/failure tracking
    - Recovery backup creation for safe rollback operations
EOF
}